name: Tests Pull Requests
concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
jobs:
  tests:
    name: ${{ matrix.target }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [tests, lint]
        rust_toolchain: [nightly-2022-07-23] # Needs nightly for clippy and docs check
    runs-on: ${{ matrix.os }}
    env:
      RUST_TOOLCHAIN: ${{ matrix.rust_toolchain }}
    steps:
      - name: Free space on Ubuntu
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: |
          echo "Pre cleanup"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Post cleanup"
          df -h
      - name: Check out code
        uses: actions/checkout@v3

      # Skip individual steps if only certain files changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/*.hbs'
              - '.rustfmt.toml'
              - '**/Cargo.toml'
              - '**/Cargo.lock'
              - 'ci/build.sh'
              - 'scripts/**.sh'
            js:
              - 'js/**'

      # Rust
      - name: Install latest nightly
        if: ${{ steps.filter.outputs.rust == 'true' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
      - name: Cache
        if: ${{ steps.filter.outputs.rust == 'true' }}
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ env.RUST_TOOLCHAIN }}
      - name: Run tests
        if: ${{ steps.filter.outputs.rust == 'true' }}
        run: ./ci/build.sh
        env:
          TARGET: ${{ matrix.target }}

      # JS
      - name: Use Node.js
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: js/api-augment/package-lock.json
      - name: Install
        run: npm ci
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        working-directory: js/api-augment
      - name: Lint
        run: npm run lint
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        working-directory: js/api-augment
      - name: Test
        run: npm test
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        working-directory: js/api-augment
      - name: Build
        run: npm run build
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        working-directory: js/api-augment
      - name: Build & Publish Dry Run
        if: ${{ steps.filter.outputs.js == 'true' && matrix.target == 'tests' }}
        run: npm publish --dry-run
        working-directory: js/api-augment/dist
