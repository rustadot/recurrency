name: Build Frequency Binary and Specs

on:
  push:
    tags:
      - '[0-9][0-9][0-9][0-9].[0-9][0-9].[0-9][0-9][0-9]'

jobs:
  build_binary_and_specs:
    name: build_binary_and_specs
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [build-node]
        rust_toolchain: [nightly-2022-07-23]
    runs-on: ${{ matrix.os }}
    env:
      RUST_TOOLCHAIN: ${{ matrix.rust_toolchain }}
    steps:
      - name: Free space on Ubuntu
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: |
          echo "Pre cleanup"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Post cleanup"
          df -h
      - name: Check out code
        uses: actions/checkout@v3

      # Rust
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ env.RUST_TOOLCHAIN }}
      - name: Install toolchain for frequency
        run: make install-toolchain
      - name: Run build rococo binary
        run: make build-rococo-release
      - name: Build frequency rococo related specs and wasm üìù
        run: ./scripts/generate_specs.sh 4044 rococo-4044 production
      - name: Create tarball of rococo spec and wasm üì¶
        run: tar -cvf frequency_specs_rococo_testnet-${{ github.sha }}.tar ./res/genesis/testnet
      - name: Upload frequency rococo spec and wasm artifacts üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_specs_rococo_testnet-${{ github.sha }}.tar
      - name: Create tarball of frequency rococo binary üì¶
        run: tar -cvf frequency_rococo_binary-${{ github.sha }}.tar ./target/production/frequency
      - name: Upload frequency binary artifacts üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_rococo_binary-${{ github.sha }}.tar
      - name: Run build mainnet binary
        run: make build-mainnet-release
      - name: Build frequency mainnet related specs and wasm üìù
        run: ./scripts/generate_specs.sh 999 mainnet production
      - name: Create tarball of frequency spec and wasm üì¶
        run: tar -cvf frequency_specs_main-${{ github.sha }}.tar ./res/genesis/mainnet
      - name: Upload frequency spec and wasm artifacts üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_specs_main-${{ github.sha }}.tar
      - name: Create tarball of frequency binary üì¶
        run: tar -cvf frequency_mainnet_binary-${{ github.sha }}.tar ./target/production/frequency
      - name: Upload frequency binary artifacts üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_mainnet_binary-${{ github.sha }}.tar
  build_rococo_srtool_wasm:
    name: build_rococo_srtool_wasm
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [build-node]
        rust_toolchain: [nightly-2022-07-23]
    runs-on: ${{ matrix.os }}
    env:
      RUST_TOOLCHAIN: ${{ matrix.rust_toolchain }}
    steps:
      - name: Free space on Ubuntu
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: |
          echo "Pre cleanup"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Post cleanup"
          df -h
      - name: Check out code
        uses: actions/checkout@v3
      - name: Run Srtool For Local Wasm
        run: ./ci/build.sh
        env:
          TARGET: build-runtime
          RUST_TOOLCHAIN: ${{ env.RUST_TOOLCHAIN  }}
          PACKAGE: frequency-rococo-runtime
          RUNTIME_DIR: runtime/frequency-rococo
          PROFILE: production
          BUILD_OPTS: "--features on-chain-release-build,no-metadata-docs"
      - name: Create tarball  of deterministic wasm from srtool for local üì¶
        run: tar -cvf frequency_wasm_local-${{ github.sha }}.tar ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.compact.compressed.wasm ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.compact.wasm ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.wasm
      - name: Upload frequency deterministic wasm to artifacts üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_wasm_local-${{ github.sha }}.tar
      - name: Create tarball  of deterministic wasm from srtool for rococoüì¶
        run: tar -cvf frequency_wasm_rococo-${{ github.sha }}.tar ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.compact.compressed.wasm ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.compact.wasm ./runtime/frequency-rococo/target/srtool/production/wbuild/frequency-rococo-runtime/frequency_rococo_runtime.wasm
      - name: Upload frequency deterministic wasm to artifacts for rococo üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_wasm_rococo-${{ github.sha }}.tar
  build_mainnet_srtool_wasm:
    name: build_mainnet_srtool_wasm
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [build-node]
        rust_toolchain: [nightly-2022-07-23]
    runs-on: ${{ matrix.os }}
    env:
      RUST_TOOLCHAIN: ${{ matrix.rust_toolchain }}
    steps:
      - name: Free space on Ubuntu
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: |
          echo "Pre cleanup"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Post cleanup"
          df -h
      - name: Check out code
        uses: actions/checkout@v3
      - name: Run Srtool For Frequency Wasm
        run: ./ci/build.sh
        env:
          TARGET: build-runtime
          RUST_TOOLCHAIN: ${{ env.RUST_TOOLCHAIN  }}
          PACKAGE: frequency-runtime
          RUNTIME_DIR: runtime/frequency
          PROFILE: production
          BUILD_OPTS: "--features on-chain-release-build,no-metadata-docs"
      - name: Create tarball  of deterministic wasm from srtool for mainnet
        run: tar -cvf frequency_wasm_main-${{ github.sha }}.tar ./runtime/frequency/target/srtool/production/wbuild/frequency-runtime/frequency_runtime.compact.compressed.wasm ./runtime/frequency/target/srtool/production/wbuild/frequency-runtime/frequency_runtime.compact.wasm ./runtime/frequency/target/srtool/production/wbuild/frequency-runtime/frequency_runtime.wasm
      - name: Upload frequency deterministic wasm to artifacts for mainnet üì¶
        uses: softprops/action-gh-release@v1
        with:
          files: frequency_wasm_main-${{ github.sha }}.tar
