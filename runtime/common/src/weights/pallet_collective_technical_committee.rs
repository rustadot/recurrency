//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("frequency-bench"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/frequency
// benchmark
// pallet
// --pallet=pallet_collective
// --extrinsic
// *
// --chain=frequency-bench
// --execution=wasm
// --heap-pages=4096
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --output=./scripts/../runtime/common/src/weights
// --template=./scripts/../.maintain/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for pallet_collective using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::WeightInfo for SubstrateWeight<T> {
	// Storage: TechnicalCommittee Members (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:25 w:25)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `m` is `[0, 10]`.
	/// The range of component `n` is `[0, 10]`.
	/// The range of component `p` is `[0, 25]`.
	/// The range of component `m` is `[0, 10]`.
	/// The range of component `n` is `[0, 10]`.
	/// The range of component `p` is `[0, 25]`.
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(8_311_000 as u64)
			// Standard Error: 62_234
			.saturating_add(Weight::from_ref_time(3_010_146 as u64).saturating_mul(m as u64))
			// Standard Error: 25_290
			.saturating_add(Weight::from_ref_time(3_359_363 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(p as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	fn execute(b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(12_222_201 as u64)
			// Standard Error: 10
			.saturating_add(Weight::from_ref_time(1_865 as u64).saturating_mul(b as u64))
			// Standard Error: 1_116
			.saturating_add(Weight::from_ref_time(17_998 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:0)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	fn propose_execute(b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(13_938_730 as u64)
			// Standard Error: 11
			.saturating_add(Weight::from_ref_time(1_936 as u64).saturating_mul(b as u64))
			// Standard Error: 1_219
			.saturating_add(Weight::from_ref_time(35_421 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalCount (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[2, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[2, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(19_811_294 as u64)
			// Standard Error: 50
			.saturating_add(Weight::from_ref_time(2_725 as u64).saturating_mul(b as u64))
			// Standard Error: 5_983
			.saturating_add(Weight::from_ref_time(159_118 as u64).saturating_mul(m as u64))
			// Standard Error: 2_087
			.saturating_add(Weight::from_ref_time(246_050 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[5, 10]`.
	/// The range of component `m` is `[5, 10]`.
	fn vote(m: u32, ) -> Weight {
		Weight::from_ref_time(18_111_362 as u64)
			// Standard Error: 4_861
			.saturating_add(Weight::from_ref_time(135_859 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(21_265_058 as u64)
			// Standard Error: 6_334
			.saturating_add(Weight::from_ref_time(170_957 as u64).saturating_mul(m as u64))
			// Standard Error: 1_689
			.saturating_add(Weight::from_ref_time(218_083 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(27_934_590 as u64)
			// Standard Error: 105
			.saturating_add(Weight::from_ref_time(3_254 as u64).saturating_mul(b as u64))
			// Standard Error: 16_318
			.saturating_add(Weight::from_ref_time(121_679 as u64).saturating_mul(m as u64))
			// Standard Error: 4_365
			.saturating_add(Weight::from_ref_time(471_632 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(23_244_099 as u64)
			// Standard Error: 6_983
			.saturating_add(Weight::from_ref_time(203_597 as u64).saturating_mul(m as u64))
			// Standard Error: 1_862
			.saturating_add(Weight::from_ref_time(226_334 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(33_244_285 as u64)
			// Standard Error: 67
			.saturating_add(Weight::from_ref_time(2_411 as u64).saturating_mul(b as u64))
			// Standard Error: 10_367
			.saturating_add(Weight::from_ref_time(110_016 as u64).saturating_mul(m as u64))
			// Standard Error: 2_773
			.saturating_add(Weight::from_ref_time(412_967 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `p` is `[1, 25]`.
	fn disapprove_proposal(p: u32, ) -> Weight {
		Weight::from_ref_time(13_443_024 as u64)
			// Standard Error: 997
			.saturating_add(Weight::from_ref_time(183_492 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
}
