//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("frequency-bench"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/frequency
// benchmark
// pallet
// --pallet=pallet_collective
// --extrinsic
// *
// --chain=frequency-bench
// --execution=wasm
// --heap-pages=4096
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --output=./scripts/../runtime/common/src/weights
// --template=./scripts/../.maintain/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for pallet_collective using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::WeightInfo for SubstrateWeight<T> {
	// Storage: Council Members (r:1 w:1)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:0)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:25 w:25)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:0 w:1)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `m` is `[0, 10]`.
	/// The range of component `n` is `[0, 10]`.
	/// The range of component `p` is `[0, 25]`.
	/// The range of component `m` is `[0, 10]`.
	/// The range of component `n` is `[0, 10]`.
	/// The range of component `p` is `[0, 25]`.
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(8_298_000 as u64)
			// Standard Error: 62_505
			.saturating_add(Weight::from_ref_time(3_008_516 as u64).saturating_mul(m as u64))
			// Standard Error: 25_400
			.saturating_add(Weight::from_ref_time(3_376_847 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(p as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	fn execute(b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(12_229_280 as u64)
			// Standard Error: 13
			.saturating_add(Weight::from_ref_time(1_873 as u64).saturating_mul(b as u64))
			// Standard Error: 1_479
			.saturating_add(Weight::from_ref_time(12_752 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:0)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[1, 10]`.
	fn propose_execute(b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(14_129_678 as u64)
			// Standard Error: 16
			.saturating_add(Weight::from_ref_time(1_868 as u64).saturating_mul(b as u64))
			// Standard Error: 1_781
			.saturating_add(Weight::from_ref_time(28_919 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalCount (r:1 w:1)
	// Proof Skipped: Council ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[2, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[2, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(19_682_228 as u64)
			// Standard Error: 54
			.saturating_add(Weight::from_ref_time(2_742 as u64).saturating_mul(b as u64))
			// Standard Error: 6_394
			.saturating_add(Weight::from_ref_time(154_376 as u64).saturating_mul(m as u64))
			// Standard Error: 2_231
			.saturating_add(Weight::from_ref_time(247_499 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[5, 10]`.
	/// The range of component `m` is `[5, 10]`.
	fn vote(m: u32, ) -> Weight {
		Weight::from_ref_time(18_011_162 as u64)
			// Standard Error: 5_749
			.saturating_add(Weight::from_ref_time(128_363 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(21_060_213 as u64)
			// Standard Error: 6_848
			.saturating_add(Weight::from_ref_time(188_310 as u64).saturating_mul(m as u64))
			// Standard Error: 1_826
			.saturating_add(Weight::from_ref_time(218_653 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(27_978_343 as u64)
			// Standard Error: 111
			.saturating_add(Weight::from_ref_time(3_286 as u64).saturating_mul(b as u64))
			// Standard Error: 17_232
			.saturating_add(Weight::from_ref_time(112_240 as u64).saturating_mul(m as u64))
			// Standard Error: 4_610
			.saturating_add(Weight::from_ref_time(475_193 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(23_287_381 as u64)
			// Standard Error: 11_330
			.saturating_add(Weight::from_ref_time(217_936 as u64).saturating_mul(m as u64))
			// Standard Error: 3_022
			.saturating_add(Weight::from_ref_time(223_660 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `b` is `[2, 1024]`.
	/// The range of component `m` is `[4, 10]`.
	/// The range of component `p` is `[1, 25]`.
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(33_973_460 as u64)
			// Standard Error: 72
			.saturating_add(Weight::from_ref_time(2_351 as u64).saturating_mul(b as u64))
			// Standard Error: 11_247
			.saturating_add(Weight::from_ref_time(75_451 as u64).saturating_mul(m as u64))
			// Standard Error: 3_009
			.saturating_add(Weight::from_ref_time(401_077 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	/// The range of component `p` is `[1, 25]`.
	/// The range of component `p` is `[1, 25]`.
	fn disapprove_proposal(p: u32, ) -> Weight {
		Weight::from_ref_time(13_405_820 as u64)
			// Standard Error: 1_308
			.saturating_add(Weight::from_ref_time(188_025 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
}
